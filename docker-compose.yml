services:
  postgres:
    image: postgres:15
    container_name: bank-postgres
    environment:
      POSTGRES_DB: bank
      POSTGRES_USER: bank_user
      POSTGRES_PASSWORD: bank_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bank_user -d bank"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  bank-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bank-rest-api
    environment:
      # Database settings for Docker environment
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bank
      SPRING_DATASOURCE_USERNAME: bank_user
      SPRING_DATASOURCE_PASSWORD: bank_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver

      # JPA/Hibernate settings
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect

      # Liquibase settings
      SPRING_LIQUIBASE_CHANGE_LOG: classpath:db/migration/changelog-001-init.xml
      SPRING_LIQUIBASE_ENABLED: true
      SPRING_LIQUIBASE_DROP_FIRST: false

      # Server settings
      SERVER_PORT: 8080

      # JWT settings
      JWT_SECRET: mySecretKeyForJwtTokenGenerationAndValidationThatIsLongEnoughForHmacSha512Algorithm
      JWT_EXPIRATION: 3600000

      # Card encryption
      CARD_ENCRYPTION_KEY: myCardEncryptionSecretKey32Bytes!!

      # Swagger/OpenAPI settings
      SPRINGDOC_API_DOCS_PATH: /api-docs
      SPRINGDOC_SWAGGER_UI_PATH: /swagger-ui.html
      SPRINGDOC_SWAGGER_UI_OPERATIONS_SORTER: method
      SPRINGDOC_SWAGGER_UI_TAGS_SORTER: alpha
      SPRINGDOC_SWAGGER_UI_TRY_IT_OUT_ENABLED: true
      SPRINGDOC_SWAGGER_UI_FILTER: true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bank-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: bank-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bank.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bank-network

volumes:
  postgres_data:

networks:
  bank-network:
    driver: bridge
